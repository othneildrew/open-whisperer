services:
  python-server:
    container_name: whisperer-python-server
    restart: unless-stopped
    networks:
      - web
    build:
      context: .
      dockerfile: apps/python-server/Dockerfile
    working_dir: /app
    volumes:
      - whisper_data:/app/data
    expose:
      - "8000"
    env_file:
      - ./apps/python-server/.env
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.open-whisperer.rule=Host(`api.open-whisperer.othneil.dev`)
      - traefik.http.routers.open-whisperer.entrypoints=websecure
      - traefik.http.routers.open-whisperer.tls.certresolver=le
      - traefik.http.services.open-whisperer.loadbalancer.server.port=8000

  web-ui:
    container_name: whisperer-web-ui
    restart: unless-stopped
    networks:
      - web
    build:
      context: .
      dockerfile: apps/web-ui/Dockerfile
    working_dir: /app/apps/web-ui
    expose:
      - "3000"
    env_file:
      - ./apps/web-ui/.env.production.local
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.open-whisperer.rule=Host(`open-whisperer.othneil.dev`)
      - traefik.http.routers.open-whisperer.entrypoints=websecure
      - traefik.http.routers.open-whisperer.tls.certresolver=le
      - traefik.http.services.open-whisperer.loadbalancer.server.port=3000

volumes:
  whisper_data:

networks:
  web: # used by traefik
    external: true
